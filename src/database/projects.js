export const projects = [
  {
    //fundamentos
    name: "Mysterious Letter",
    category: "basis",
    describe: "Dado um valor digitado em um campo de texto, apresentar as palavras com uma apar√™ncia de uma carta onde cada palavra possui uma estiliza√ß√£o pr√≥pria, similar uma carta de recorte de revistas",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    banner: "/projectsimg/basis/mysterious-letter.png",
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e abra o html",
    repo: "https://github.com/JoseACSouza/mysterious-letter",
    demo: "",
    main: false,
  },
  {
    name: "Color Guess",
    category: "basis",
    describe: "- Nesta aplica√ß√£o dever√° ser poss√≠vel jogar um jogo de adivinha√ß√£o de cores onde: Dentro de uma possibilidade de cores o jogador dever√° tentar adivinhar qual cor foi aleatoriamente selecionada como a cor certa; A paleta de cores deve ser apresentada por c√≠rculos coloridos; Dever√° existir um bot√£o para iniciar e reiniciar o jogo; Ao selecionar uma cor um texto dever√° informar se voc√™ acertou ou n√£o a cor correta.",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    banner: "/projectsimg/basis/color-guess.png",
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e abra o html",
    repo: "https://github.com/JoseACSouza/color-guess",
    demo: "",
    main: false,
  },
  {
    name: "To do List",
    category: "basis",
    describe: "Cria uma lista de tarefas simples e funcional",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    banner: "/projectsimg/basis/todo-list.png",
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e abra o html",
    repo: "https://github.com/JoseACSouza/todo-list",
    demo: "",
    main: false,
  },
  {
    name: "Meme Generator",
    category: "basis",
    describe: "Utiliza os elementos JS, HTML e CSS para criar uma f√°brica de memes, com uma imagem e um texto",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    banner: "/projectsimg/basis/meme-generator.png",
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e abra o html",
    repo: "https://github.com/JoseACSouza/meme-generator",
    demo: "",
    main: false,
  },
  {
    name: "JS Unit Tests",
    category: "basis",
    describe: "Testes utilizando Jest para verificar a funcionalidade das fun√ß√µes",
    stacks: ["Jest", "NodeJS"],
    banner: "/projectsimg/basis/js-unit.png",
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e rode os tests unit√°rios com npm run tests",
    repo: "https://github.com/JoseACSouza/js-unit-tests",
    demo: "",
    main: false,
  },
  {
    name: "Pixels Art",
    category: "basis",
    describe: "Um editor de arte com pixels em que a pessoa usu√°ria poder√° escolher uma cor em uma paleta de cores e poder√° pintar o que quiser em um quadro branco üé® üßë‚Äçüé®",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e abra o html",
    banner: "/projectsimg/basis/pixel-art.png",
    repo: "https://github.com/JoseACSouza/pixels-art",
    demo: "",
    main: false,
  },
  {
    name: "Playground Functions",
    category: "basis",
    describe: "Implementar o c√≥digo de fun√ß√µes que resolvem problemas com respostas pr√©-determinadas. Utilizando a l√≥gica de programa√ß√£o para ajudar na an√°lise de cada problema e resposta esperada, facilitando a implementa√ß√£o do c√≥digo de cada uma das fun√ß√µes.",
    stacks: ["JavaScript"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e utilize algum code runner para testar se os objetivos foram atingidos",
    banner: "/projectsimg/basis/zoo-playground-functions.png",
    repo: "https://github.com/JoseACSouza/playground-functions",
    demo: "",
    main: false,
  },
  {
    name: "Trybewarts",
    category: "basis",
    describe: "Uma p√°gina de formul√°rio da Escola de Magia de Trybewarts, em que as pessoas estudantes poder√£o enviar seus feedbacks sobre ela. O tema desse projeto √© baseado na obra 'Harry Potter', de J. K. Rowling, j√° que programar √© o mais pr√≥ximo que podemos chegar de algo verdadeiramente m√°gico! Mas n√£o se preocupe se n√£o tiver conhecimento sobre o universo da obra original, pois essa √© uma vers√£o pr√≥pria da Escola de Bruxaria",
    stacks: ["JavaScript", "HTML5", "CSS3"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e abra o html",
    banner: "/projectsimg/basis/trybewarts.png",
    repo: "https://github.com/JoseACSouza/trybewarts",
    demo: "",
    main: false,
  },
  {
    name: "Zoo Functions",
    category: "basis",
    describe: "Fun√ß√µes que buscam informa√ß√µes sobre os animais do zool√≥gico como: esp√©cie e local de origem. Al√©m disso, voc√™ tamb√©m vai buscar dados sobre as pessoas que colaboram com a manuten√ß√£o e cuidado do zool√≥gico üßë‚Äçüåæ, sempre testando as fun√ß√µes para manter sempre o c√≥digo confi√°vel e com boa performance.",
    stacks: ["JavaScript", "Jest", "NodeJS"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e utilize algum code runner para testar se os objetivos foram atingidos",
    banner: "/projectsimg/basis/zoo-playground-functions.png",
    repo: "https://github.com/JoseACSouza/zoo-functions",
    demo: "",
    main: false,
  },
  //front-end
  {
    name: "Solar System",
    category: "Front-End",
    describe: "Neste projeto voc√™ desenvolver√° um modelo do sistema solar! Ao utilizar essa aplica√ß√£o, uma pessoa usu√°ria dever√° ser capaz de: Visualizar todos os planetas do sistema solar renderizados na tela; Visualizar todas as cartas com informa√ß√µes sobre miss√µes espaciais;",
    stacks: ["JavaScript", "ReactJS"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/solar-system.png",
    repo: "https://github.com/JoseACSouza/solar-system",
    demo: "",
    main: false,
  },
  {
    name: "Super Trunfo Medieval",
    category: "Front-End",
    describe: "Neste projeto desenvolvo um deck-builder de um jogo de super trunfo",
    stacks: ["JavaScript", "ReactJS", "CSS3"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/tryunfo.png",
    repo: "https://github.com/JoseACSouza/project_tryunfo",
    demo: "",
    main: false,
  },
  {
    name: "Shopping Cart",
    category: "Front-End",
    describe: "Carrinho de compras com aquisi√ß√£o dos produtos do mercado livre",
    stacks: ["JavaScript", "ReactJS", "CSS3"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/shopping-cart.png",
    repo: "https://github.com/JoseACSouza/shopping_cart",
    demo: "",
    main: false,
  },
  {
    name: "React Testing Library",
    category: "Front-End",
    describe: "Neste projeto eu desenvolvo os testes para a aplica√ß√£o de poked√©x feita com react",
    stacks: ["JavaScript", "Jest", "ReactJS", "React Testing Library"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e rode os tests unit√°rios com npm run tests",
    banner: "/projectsimg/frontend/rtl.png",
    repo: "https://github.com/JoseACSouza/rtl_tests",
    demo: "",
    main: false,
  },
  {
    name: "TrybeTunes",
    category: "Front-End",
    describe: "Uma aplica√ß√£o capaz de reproduzir m√∫sicas das mais variadas bandas e artistas, criar uma lista de m√∫sicas favoritas e editar o perfil da pessoa usu√°ria logada. Essa aplica√ß√£o ser√° capaz de: - Fazer login; - Pesquisar por uma banda ou artista;  - Listar os √°lbuns dispon√≠veis dessa banda ou artista; - Visualizar as m√∫sicas de um √°lbum selecionado; - Reproduzir uma pr√©via das m√∫sicas deste √°lbum; - Favoritar e desfavoritar m√∫sicas; - Ver a lista de m√∫sicas favoritas; - Ver o perfil da pessoa logada; - Editar o perfil da pessoa logada;",
    stacks: ["JavaScript", "ReactJS", "TailwindCSS"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/trybe-tunes.png",
    repo: "https://github.com/JoseACSouza/trybetunes",
    demo: "",
    main: true,
  },
  {
    name: "Trybewallet",
    category: "Front-End",
    describe: "Uma carteira de controle de gastos com conversor de moedas, ao utilizar essa aplica√ß√£o um usu√°rio dever√° ser capaz de: - Adicionar, remover e editar um gasto; - Visualizar uma tabelas com seus gastos; - Visualizar o total de gastos convertidos para uma moeda de escolha;",
    stacks: ["JavaScript", "Jest", "ReactJS", "TailwindCSS"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/trybe-wallet.png",
    repo: "https://github.com/JoseACSouza/trybewallet",
    demo: "",
    main: false,
  },
  {
    name: "StarWars Planet Search",
    category: "Front-End",
    describe: "Uma p√°gina dos principais planetas da saga de StarWars e suas respectivas informa√ß√µes",
    stacks: ["JavaScript", "Jest", "ReactJS", "TailwindCSS"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'npm install' e ent√£o inicie o app web com 'npm start'",
    banner: "/projectsimg/frontend/star-wars.png",
    repo: "https://github.com/JoseACSouza/starwars-planets-search",
    demo: "",
    main: false,
  },
  //data-science
  {
    name: "Algorithms",
    category: "Data-Science",
    describe: "Projeto que resolvi problemas e otimizei algoritmos desenvolvendo a capacidade de implementar solu√ß√µes para os mais diversos problemas do dia a dia!",
    stacks: ["Python"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'pip install'",
    banner: "/projectsimg/data-science/python.jpg",
    repo: "https://github.com/JoseACSouza/project-algorithms",
    demo: "",
    main: false,
  },
  {
    name: "Job Insights",
    category: "Data-Science",
    describe: "Neste projeto implementei an√°lises a partir de um conjunto de dados sobre empregos.",
    stacks: ["Python"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'pip install'",
    banner: "/projectsimg/data-science/python.jpg",
    repo: "https://github.com/JoseACSouza/job-insights",
    demo: "",
    main: false,
  },
  {
    name: "TING (Trybe is not Google)",
    category: "Data-Science",
    describe: "Neste projeto implementei um programa que simule um algoritmo de indexa√ß√£o de documentos similar ao do Google. Seu programa dever√° ser capaz de identificar ocorr√™ncias de termos em arquivos _TXT_. Para isso, o programa desenvolvido por voc√™ dever√° ter dois m√≥dulos: - **M√≥dulo de gerenciamento de arquivos** que permite anexar arquivos de texto (formato _TXT_) e;- **M√≥dulo de buscas** que permite operar fun√ß√µes de busca sobre os arquivos anexados.",
    stacks: ["Python"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'pip install'",
    banner: "/projectsimg/data-science/python.jpg",
    repo: "https://github.com/JoseACSouza/ting",
    demo: "",
    main: false,
  },
  {
    name: "Restaurant Orders",
    category: "Data-Science",
    describe: "Projeto que resolve a seguinte situa√ß√£o problema: O Restaurante  üçù ü¶ê Chapa Quente üçõ ü•ò precisa de voc√™ para finalizar sua ferramenta de constru√ß√£o de card√°pios. O restaurante necessita desta ferramenta para que possa, de maneira simples, gerar seus card√°pios considerando poss√≠veis restri√ß√µes alimentares e tamb√©m a disponibilidade dos ingredientes em estoque. Hoje, a gest√£o das receitas e de estoque do restaurante acontece de forma muito ineficiente atrav√©s de arquivos csv e, por essa raz√£o, as pessoas fundadoras do estabelecimento desejam melhorar esta gest√£o; -Um primeiro time iniciou o desenvolvimento deste projeto e j√° preparou uma estrutura inicial para que voc√™ possa finalizar essa constru√ß√£o. Assim, ao longo deste projeto voc√™ ser√° respons√°vel por construir testes para classes j√° implementadas, implementar√° uma nova classe para mapear os pratos e suas respectivas receitas (ingredientes e quantidades), tamb√©m implementar√° uma classe que gerar√° os card√°pios que devem ser mostrados para as pessoas que frequentam o estabelecimento e outra que far√° a gest√£o de estoque dos ingredientes.",
    stacks: ["Python", "Testes Python"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio, instale as dependencias com 'pip install'",
    banner: "/projectsimg/data-science/python.jpg",
    repo: "https://github.com/JoseACSouza/restaurant-orders",
    demo: "",
    main: false,
  },

  //mobile
  {
    name: "Android Exchange",
    category: "Mobile",
    describe: "Uma aplica√ß√£o Android de convers√£o de moedas que utiliza os dados da API [exchangerate.host](https://exchangerate.host). Esse aplicativo cont√™m o layout, a valida√ß√£o de estado dos compoentes e c√≥digo de consumo de uma API Rest com Retrofit.",
    stacks: ["Kotlin"],
    instructions: "Abra o projeto no Android studio e rode em uma API 29",
    banner: "/projectsimg/mobile/android.svg",
    repo: "https://github.com/JoseACSouza/android-cambio",
    demo: "",
    main: false,
  },
  {
    name: "Login Rede Social",
    category: "Mobile",
    describe: "Tela de login de uma rede social. Essa tela de login cont√©m apenas o layout e as valida√ß√µes de interface, n√£o se conectando nesse momento com nenhuma API.",
    stacks: ["Kotlin"],
    instructions: "Abra o projeto no Android studio e rode em uma API 29",
    banner: "/projectsimg/mobile/android.svg",
    repo: "https://github.com/JoseACSouza/login-social",
    demo: "",
    main: false,
  },
  {
    name: "Trybe Virtual Menu",
    category: "Mobile",
    describe: "Um aplicativo de um card√°pio virtual, consistindo em duas telas: a primeira exibindo uma lista de itens e a segunda fornecendo detalhes do item selecionado.",
    stacks: ["Kotlin"],
    instructions: "Abra o projeto no Android studio e rode em uma API 29",
    banner: "/projectsimg/mobile/android.svg",
    repo: "https://github.com/JoseACSouza/trybe-virtual-menu",
    demo: "",
    main: false,
  },
  {
    name: "TRYBNB",
    category: "Mobile",
    describe: "Um aplicativo Android para criar e exibir as reservas feitas pelos h√≥spedes, utilizando os dados da API [restful-booker](https://restful-booker.herokuapp.com/apidoc/index.html). Este aplicativo inclui o layout, a valida√ß√£o de estados dos componentes e o c√≥digo de consumo de uma API Rest com Retrofit, seguindo a arquitetura MVVM.",
    stacks: ["Kotlin"],
    instructions: "Abra o projeto no Android studio e rode em uma API 29",
    banner: "/projectsimg/mobile/trybnb.png",
    repo: "https://github.com/JoseACSouza/trybnb",
    demo: "",
    main: true,
  },

  //back-end
  {
    name: "All For One",
    category: "Back-End",
    describe: "Temos, nesse projeto, uma s√©rie de desafios com diferentes n√≠veis de complexidade que devem ser resolvidos cada um em seu arquivo pr√≥prio.",
    stacks: ["MySQL", "Docker"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/all-for-one",
    demo: "", 
    main: false,
  },
  {
    name: "One For All",
    category: "Back-End",
    describe: "No projeto ***One For All***, usarei **algumas** tabelas para revisar e consolidar **todos** os principais conceitos vistos at√© o momento. Onde planilhas n√£o normalizadas foram normalizadas e populadas em um banco de dados para executar queries com o intuito de encontrar as informa√ß√µes solicitadas.",
    stacks: ["MySQL", "Docker"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/one-for-all",
    demo: "",
    main: false,
  },
  {
    name: "Blogs Api",
    category: "Back-End",
    describe: "Neste projeto desenvolvi uma API e um banco de dados para a produ√ß√£o de conte√∫do para um blog! Desenvolvi esta aplica√ß√£o em `Node.js` usando o pacote `sequelize` para fazer um `CRUD` de posts.1. Desenvolvi endpoints que estar√£o conectados ao seu banco de dados seguindo os princ√≠pios do REST; 2. Para fazer um post √© necess√°rio usu√°rio e login, portanto ser√° trabalhada a **rela√ß√£o entre** `user` e `post`; 3. Ser√° necess√°ria a utiliza√ß√£o de categorias para os posts, trabalhando, assim, a **rela√ß√£o de** `posts` para `categories` e de `categories` para `posts`.",
    stacks: ["MySQL", "Docker", "NodeJS", "Sequelize"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/blogs-api",
    demo: "",
    main: false,
  },
  {
    name: "Docker To Do List",
    category: "Back-End",
    describe: "Neste projeto irei: 1. **_Conteinerizar_** aplica√ß√µes; 2. Criar uma conex√£o entre elas; 3. Orquestrar seu funcionamento. Temos [uma aplica√ß√£o full-stack](docker/todo-app) neste reposit√≥rio: um **aplicativo de tarefas**! Esta aplica√ß√£o precisa ser conteinerizada para funcionar. Para isso desenvolverei os arquivos de configura√ß√£o para cada frente espec√≠fica: `Front-end`, `Back-end` e, no nosso caso, para um aplicativo de `teste` que valida se as aplica√ß√µes est√£o se comunicando. Assim eu tive de criar as imagens para as aplica√ß√µes e configurar essas imagens com o `docker-compose`. Para isto, voc√™ ir√° utilizar uma s√©rie de comandos do `docker` com diferentes n√≠veis de complexidade.Cada comando dever√° ser escrito em seu pr√≥prio arquivo.",
    stacks: ["Docker"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/docker-todo-list",
    demo: "",
    main: false,
  },
  {
    name: "Talker Manager",
    category: "Back-End",
    describe: "Irei construir uma aplica√ß√£o de cadastro de talkers (palestrantes) em que ser√° poss√≠vel cadastrar, visualizar, pesquisar, editar e excluir informa√ß√µes. Para isso voc√™ dever√°: 1. Desenvolver uma API de um `CRUD` (**C**reate, **R**ead, **U**pdate e **D**elete) de palestrantes (talkers) e; 2. Desenvolver alguns endpoints que ir√£o ler e escrever em um arquivo utilizando o m√≥dulo `fs`.",
    stacks: ["MySQL", "Docker", "NodeJS", "Sequelize"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/talker-manager",
    demo: "",
    main: false,
  },
  {
    name: "Trybers and Dragons",
    category: "Back-End",
    describe: "Este projeto √© um treinamento para POO. No universo de Trybers and Dragons - T&D, quase todos os seres que andam por essas terras pertencem a uma **ra√ßa** definida. As diversas ra√ßas (como, por exemplo, √âlfica, Orc ou An√£) definem as caracter√≠sticas das personagens dentro do jogo desde a sua cria√ß√£o, como os seus pontos de vida e a sua destreza. No entanto, existem seres bestiais denominados **monstros** que n√£o possuem uma ra√ßa espec√≠fica, mas podem lutar. Alguns seres tamb√©m possuem uma **energia** e, ao treinarem o uso da energia, passam a possuir um **arqu√©tipo**. De modo geral, os arqu√©tipos definem a voca√ß√£o de uma personagem, suas habilidades e vis√£o de mundo: como encaram as situa√ß√µes, exploram masmorras ou enfrentam monstros. Como exemplos de arqu√©tipos presentes em T&D, podemos citar guerreiro, mago e necromante. Boa parte dos seres podem ser considerados lutadores, bastando para isso possuir alguns atributos espec√≠ficos. Em muitas ocasi√µes podem acontecer lutas entre personagens diversas, bem como entre personagens e monstros. Agora, cabe a voc√™, nobre ~~dev~~, explorar essas terras e cumprir as quests que surgir√£o ao longo da sua incr√≠vel ~~jornada~~ leitura do README. **_Now, follow ~~the blind~~ the dungeon master!_**",
    stacks: ["POO", "Typescript"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/trybers-and-dragons",
    demo: "",
    main: false,
  },
  {
    name: "Trybesmith",
    category: "Back-End",
    describe: "Para este projeto, irei criar uma loja de itens medievais, como aquelas espadas feitas sob encomenda para uma pessoa espec√≠fica, no formato de uma _API_, utilizando _Typescript_ e _Sequelize_.Irei desenvolver as camadas de _Service_ e _Controllers_ da aplica√ß√£o em meu c√≥digo, utilizando _JWT_ para autenticar algumas rotas, al√©m de testes para garantir o correto funcionamento delas. A aplica√ß√£o ter√° _endpoints_ que dar√£o suporte a opera√ß√µes de cria√ß√£o, leitura e atualiza√ß√£o de informa√ß√µes. ~Aplica√ß√£o sem Front-End~",
    stacks: ["MySQL", "Docker", "NodeJS", "Sequelize", "Typescript", "Tests"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/trybesmith",
    demo: "",
    main: false,
  },
  {
    name: "Trybe Futebol Clube - TFC",
    category: "Back-End",
    describe: "O `TFC` √© um site informativo sobre partidas e classifica√ß√µes de futebol! ‚öΩÔ∏è No time de desenvolvimento do `TFC`, meu *squad* ficou respons√°vel por desenvolver uma API (utilizando o m√©todo `TDD`) e tamb√©m integrar *- atrav√©s do docker-compose -* as aplica√ß√µes para que elas funcionem consumindo um banco de dados. Nesse projeto, irei construir **um back-end dockerizado utilizando modelagem de dados atrav√©s do Sequelize**. Seu desenvolvimento deve **respeitar regras de neg√≥cio** providas no projeto e **sua API deve ser capaz de ser consumida por um front-end j√° provido nesse projeto**.",
    stacks: ["MySQL", "Docker", "NodeJS", "Sequelize", "Typescript", "Tests"],
    instructions: "Para testar em sua m√°quina, clone o reposit√≥rio e use os comandos npm install, docker-compose up",
    banner: "/projectsimg/back-end/back-end.png",
    repo: "https://github.com/JoseACSouza/trybe-futebol-clube",
    demo: "",
    main: false,
  },

  //personal projects
  {
    name: "Meu primeiro app Laravel",
    category: "Back-End",
    describe: "Este projeto √© um app simples com o intuito de aprender a utlizar o ecossistema Laravel.",
    stacks: ["MySQL", "Docker", "PHP", "Laravel", "ReactJS", "TailwindCSS"],
    instructions: "Esse projeto foi meu primeiro app em laravel e meu primeiro contato com php",
    banner: "/projectsimg/personal-projects/laravel.webp",
    repo: "https://github.com/JoseACSouza/curso-laravel-10",
    demo: "",
    main: false
  },
  {
    name: "Treinamento - COM3",
    category: "Back-End",
    describe: "Este projeto consiste em criar uma aplica√ß√£o e seu banco de dados que funcione como uma 'rede social' de uma empresa. Funcionar√° com posts e suas categorias, al√©m de filtros por categorias e um sistema de 'n√≠veis de acesso', onde apenas a staff da empresa consiga editar e apagar qualquer post al√©m de adicionar ou remover categorias.",
    stacks: ["MySQL", "Docker", "PHP", "Laravel", "ReactJS", "TailwindCSS"],
    instructions: "Para testar esse aplicativo fullstack, √© necess√°rio primeiramente instalar as dependencias com npm install, depois iniciar o banco de dados com o sail utilizando o comando ./vendor/bin/sail up e por fim rod√°-lo com npm run dev",
    banner: "/projectsimg/personal-projects/com3.png",
    repo: "https://github.com/JoseACSouza/Treinamento-COM3", 
    demo: "",
    main: true,
  },
  {
    name: "Mobile COM3",
    category: "Mobile",
    describe: "Este projeto consiste em criar uma aplica√ß√£o mobile do aplicativo web, cuja fun√ß√£o seja simplificada, (sem a vers√£o da staff). Esse aplicativo tem um destaque de funcionar sem internet, sincronizando o banco de dados quando for reestabelecidada conex√£o. PS: Essa aplica√ß√£o utiliza o banco de dados da aplica√ß√£o Treinamento COM3, sendo necess√°rio baix√°-la e deixar o banco de dados up para funcionar esta.",
    stacks: ["React Native", "TailwindCSS", "WatermelonDB"],
    instructions: "Para a visualiza√ß√£o deste app √© necess√°rio a instala√ß√£o do expo e do android studio com um API 34, ap√≥s isso, deve-se utilizar o comando npm install e ent√£o iniciar o emulador de celular criado ent√£o usar o comando npx expo start. AVISO IMPORTANTE: O banco de dados desse app mobile est√° na aplica√ß√£o [Treinamento - COM3](https://github.com/JoseACSouza/Treinamento-COM3) ou seja, depende da mesma estar com os containers up para funcionar corretamente",
    banner: "/projectsimg/mobile/com3.png",
    repo: "https://github.com/JoseACSouza/Mobile-TreinamentoCOM3", 
    demo: "",
    main: false,
  },
]
